[gcode_macro _TEST_VARS]
variable_cancel_test: 0
gcode:
    # This macro just holds the cancel variable

[gcode_macro TEST_CANCEL_LOOP]
description: Test cancellable loop - counts down from 10
gcode:
  ; Reset cancel flag
  SET_GCODE_VARIABLE MACRO=_TEST_VARS VARIABLE=cancel_test VALUE=0
  
  M118 Starting 10-second countdown test
  M118 Press CANCEL_TEST to stop early
  
  ; Simple countdown from 10 to 1
  {% for i in range(10, 0, -1) %}
    ; Check if cancelled
    {% if printer["gcode_macro _TEST_VARS"].cancel_test == 1 %}
      M118 Test cancelled at {i} seconds remaining
      M117 Test cancelled
    {% else %}
      M118 Countdown: {i} seconds left
      M117 Countdown: {i} seconds
      
      ; Only delay if not cancelled
      {% if printer["gcode_macro _TEST_VARS"].cancel_test == 0 %}
        G4 P1000  ; 1 second delay
      {% endif %}
    {% endif %}
  {% endfor %}
  
  ; Show completion only if not cancelled
  {% if printer["gcode_macro _TEST_VARS"].cancel_test == 0 %}
    M118 Test completed successfully!
    M117 Test complete
  {% endif %}
  
  ; Reset flag
  SET_GCODE_VARIABLE MACRO=_TEST_VARS VARIABLE=cancel_test VALUE=0

[gcode_macro CANCEL_TEST]
description: ðŸ›‘ Cancel the test countdown
gcode:
  M118 ðŸ›‘ Cancelling test...
  SET_GCODE_VARIABLE MACRO=_TEST_VARS VARIABLE=cancel_test VALUE=1